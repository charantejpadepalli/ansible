- name: functions
  hosts: local
  connection: local
  vars:
    technologies: Devops, Cloud, Shell, Ansible
    name: "Charan Tej P"
    mail: CHERRY18TEJS@GMAIL.COM
    ipv4: 1789.1234.9876.5436
    tags:
      Application: Cloud
      Environment: Prod 
    listTags:
    - key: Application
      value: cloud
    - key: Environment
      value: Prod
  tasks:
  - name: default variables
    ansible.builtin.debug:
      msg: "Hello, {{ name | default('Charan')}}"

  - name: convert string to list
    ansible.builtin.debug:
      msg: "{{ technologies | split(',') }}" 

  - name: convert list to string
    ansible.builtin.debug:
      msg: "Technologies are {{ technologies | split(',') }}"

  - name: convert map to list
    ansible.builtin.debug:
      msg: "Tags are {{ tags | dict2items}}"

  - name: convert list to map
    ansible.builtin.debug:
      msg: "tag map {{ listTags | items2dict }}"

  - name: read yaml and take it into variables
    ansible.builtin.set_fact:
      student_yaml: "{{ lookup('file', 'student.yaml' | from_yaml) }}"

  - name: convert into yaml
    ansible.builtin.debug:
      msg: "json: {{ student_yaml | to_json }}"

  - name: save json to file
    ansible.builtin.copy:
      dest: ./student-data.json
      content: "{{ student_yaml | to_nice_json }}"

  - name: convert to Uppercase
    ansible.builtin.debug:
      msg: "Name is {{ name | upper}}"

  - name: convert to Lowercase
    ansible.builtin.debug:
      msg: "Mail is {{ mail | lower}}"

  - name: check IP validation
    ansible.builtin.debug:
      msg: "{{ ipv4 | ansible.utils.ipv4}}" #install dependencies pip3.9 install netaddr

  - name: grep for root
    #ansible.builtin.command: cat /etc/passed | grep root
    ansible.builtin.shell: cat /etc/passed | grep root
    register: command_output

  - name: print command_output
    ansible.builtin.debug:
      msg:"{{ command_output }}"

  - name: data_output
    ansible.builtin.command: ls -ltrh
    register: data_output

  - name: print data_output
    ansible.builtin.debug:
      msg: "{{ data_output }}"

  - name: redirect_output
    ansible.builtin.shell: ls -ltrh > /tmp/output.txt
    register: redirect_output

  - name: print redirect_output
    ansible.builtin.debug:
      msg: "{{ redirect_output }}"

  - name: redirect_output_command
    ansible.builtin.command: ls -ltrh > /tmp/output.txt
    register: redirect_output_command
    ignore_errors: true
    
  - name: print redirect_output_command
    ansible.builtin.debug:
      msg: "{{ redirect_output_command }}"
  